version: '3.8'

services:
  # ML API Service
  ml-api:
    build: .
    ports:
      - "8000:8000"
    environment:
      - MLFLOW_TRACKING_URI=http://mlflow:5000
      - PYTHONPATH=/app
    volumes:
      - ./data:/app/data
      - ./models:/app/models
      - ./artifacts:/app/artifacts
      - ./logs:/app/logs
    depends_on:
      - mlflow
    networks:
      - ml-network
    restart: unless-stopped

  # MLflow Tracking Server
  mlflow:
    image: python:3.9-slim
    ports:
      - "5001:5000"
    command: >
      bash -c "
        pip install mlflow==2.8.1 &&
        mlflow server --host 0.0.0.0 --port 5000 --backend-store-uri sqlite:///mlflow.db --default-artifact-root ./artifacts
      "
    volumes:
      - ./mlruns:/mlruns
      - ./artifacts:/artifacts
    networks:
      - ml-network
    restart: unless-stopped

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - ml-network
    restart: unless-stopped

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    depends_on:
      - prometheus
    networks:
      - ml-network
    restart: unless-stopped

  # Database for logging (optional)
  postgres:
    image: postgres:13
    environment:
      - POSTGRES_USER=mlapi
      - POSTGRES_PASSWORD=mlapi123
      - POSTGRES_DB=mlapi_logs
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - ml-network
    restart: unless-stopped

volumes:
  prometheus_data:
  grafana_data:
  postgres_data:

networks:
  ml-network:
    driver: bridge